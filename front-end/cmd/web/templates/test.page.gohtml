{{/*
Include the "base" template to provide the basic structure of the HTML document.
This template is expected to define the <head> section and provide blocks for content and JavaScript.
*/}}
{{template "base" .}}


{{/*
Define a template named "content" for the main content of the HTML document.
*/}}
{{define "content"}}
<div class="container">
   <div class="row">
       <div class="col">
           <h1 class="mt-5">Test microservices</h1>
           <hr>
           <a id="brokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Broker</a>
           <a id="authBrokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Auth</a>
            <a id="logBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test Log</a>


           <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
               <span class="text-muted">Output shows here...</span>
           </div>
       </div>
   </div>
   <div class="row">
       <div class="col">
           <h4 class="mt-5">Sent</h4>
           <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
               <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
           </div>
       </div>
       <div class="col">
           <h4 class="mt-5">Received</h4>
           <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
               <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
           </div>
       </div>
   </div>
</div>
{{end}}


{{/*
Define a template named "js" for JavaScript code that should be included at the end of the body.
*/}}
{{define "js"}}
<script>
    // Event listener for the brokerBtn click
    let brokerBtn = document.getElementById("brokerBtn");
    let output = document.getElementById("output");
    let sent = document.getElementById("payload");
    let recevied = document.getElementById("received");
    let authBrokerBtn = document.getElementById("authBrokerBtn");
    let logBtn = document.getElementById("logBtn");

    brokerBtn.addEventListener("click", function() {
   
    // Create the request body for the fetch call
    const body = {
        method: 'POST',
    };

    // Perform the fetch request to the broker service
    fetch("http://localhost:8080", body)
    .then((response) => response.json()) // Parse the JSON from the response
    .then((data) => {
        // Update the 'sent' section with a message
        sent.innerHTML = "empty post request";
        
        // Update the 'received' section with the formatted JSON response
        received.innerHTML = JSON.stringify(data, undefined, 4);


        // Check if there is an error in the response
        if (data.error) {
            console.log(data.message);
        } else {
            // Update the 'output' section with the response message
            output.innerHTML += `<br><strong>Response from broker service</strong>: ${data.message}`;
        }
    })
    .catch((error) => {
        // Handle any errors that occur during the fetch request
        output.innerHTML += "<br><br>Error: " + error;
    });
   });


    authBrokerBtn.addEventListener("click", function() {
     const payload = {
         action: "auth",
         auth: {
             email: "admin@example.com",
             password: "verysecret",
         }
     }
     const headers = new Headers();
     headers.append("Content-Type", "application/json");


     const body = {
         method: 'POST',
         body: JSON.stringify(payload),
         headers: headers,
     }


     fetch("http://localhost:8080/handle", body)
     .then((response) => response.json())
     .then((data) => {
         sent.innerHTML = JSON.stringify(payload, undefined, 4);
         received.innerHTML = JSON.stringify(data, undefined, 4);
         if (data.error) {
             output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
         } else {
             output.innerHTML += `<br><strong>Response from broker service</strong>: ${data.message}`;
         }
     })
     .catch((error) => {
         output.innerHTML += "<br><br>Eror: " + error;
     })
 })


logBtn.addEventListener("click", function() {
       const payload = {
           action: "log",
           log: {
               name: "event",
               data: "Some kind of data",
           }
       }


       const headers = new Headers();
       headers.append("Content-Type", "application/json");


       const body = {
           method: "POST",
           body: JSON.stringify(payload),
           headers: headers,
       }


       fetch("http://localhost:8080/handle", body)
       .then((response) => response.json())
       .then((data) => {
           sent.innerHTML = JSON.stringify(payload, undefined, 4);
           received.innerHTML = JSON.stringify(data, undefined, 4);
           if (data.error) {
               output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
           } else {
               output.innerHTML += `<br><strong>Response from broker service</strong>: ${data.message}`;
           }
       })
       .catch((error) => {
           output.innerHTML += "<br><br>Error: " + error;
       })       
   })


</script>
{{end}}